{
  "paragraphs": [
    {
      "text": "%md\n# Use AutoML\n\n## Introduction\n\nThis lab walks you through the steps to use the AutoML functionality.\n\nEstimated Lab Time: 15 minutes\n\n### About AutoML\nAutoML (Automated Machine Learning) provides built-in data science expertise about data analytics and modeling that you can employ to build machine learning models.\n\n### Objectives\n\nIn this lab, you will learn how to:\n* Create data set (wine data) as a Pandas DataFrame and load into ADB\n* Use `automl.AlgorithmSelection` to rank the in-database algorithms by predicted score metric for classification or regression problems\n* Use `automl.FeatureSelection` to identify the most relevant feature subsets for the provided training data set and an in-database algorithm\n* Use `automl.ModelTuning` to tune hyperparameters for the specified algorithm and training data\n* Use `automl.ModelSelection` to select the top in-database algorithm and then tune the corresponding model in a single function invocation\n\nCopyright (c) 2022 Oracle Corporation \n###### <a href=\"https://oss.oracle.com/licenses/upl/\" onclick=\"return ! window.open('https://oss.oracle.com/licenses/upl/');\">The Universal Permissive License (UPL), Version 1.0</a>\n---\n\n## Task 1: Import libraries supporting OML4Py\n\n1.1. Run the following script to import the `oml` module, Pandas package, and the `automl` module from oml.",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:29:51+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h1>Use AutoML</h1>\n<h2>Introduction</h2>\n<p>This lab walks you through the steps to use the AutoML functionality.</p>\n<p>Estimated Lab Time: 15 minutes</p>\n<h3>About AutoML</h3>\n<p>AutoML (Automated Machine Learning) provides built-in data science expertise about data analytics and modeling that you can employ to build machine learning models.</p>\n<h3>Objectives</h3>\n<p>In this lab, you will learn how to:</p>\n<ul>\n<li>Create data set (wine data) as a Pandas DataFrame and load into ADB</li>\n<li>Use <code>automl.AlgorithmSelection</code> to rank the in-database algorithms by predicted score metric for classification or regression problems</li>\n<li>Use <code>automl.FeatureSelection</code> to identify the most relevant feature subsets for the provided training data set and an in-database algorithm</li>\n<li>Use <code>automl.ModelTuning</code> to tune hyperparameters for the specified algorithm and training data</li>\n<li>Use <code>automl.ModelSelection</code> to select the top in-database algorithm and then tune the corresponding model in a single function invocation</li>\n</ul>\n<p>Copyright (c) 2022 Oracle Corporation</p>\n<h6><a href=\"https: //oss.oracle.com/licenses/upl/\" onclick=\"return ! window.open('https://oss.oracle.com/licenses/upl/');\">The Universal Permissive License (UPL), Version 1.0</a></h6>\n<hr />\n<h2>Task 1: Import libraries supporting OML4Py</h2>\n<p>1.1. Run the following script to import the <code>oml</code> module, Pandas package, and the <code>automl</code> module from oml.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_143417800",
      "id": "20220720-080131_1442164104",
      "dateCreated": "2021-03-20T08:36:20+0000",
      "dateStarted": "2022-07-20T08:29:51+0000",
      "dateFinished": "2022-07-20T08:29:51+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:40"
    },
    {
      "text": "%python\n\nimport pandas as pd\nimport oml\nfrom oml import automl",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:29:51+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_118318847",
      "id": "20220720-080131_1546441048",
      "dateCreated": "2021-03-20T08:36:31+0000",
      "dateStarted": "2022-07-20T08:29:52+0000",
      "dateFinished": "2022-07-20T08:30:01+0000",
      "status": "FINISHED",
      "$$hashKey": "object:41"
    },
    {
      "text": "%md\n---\n1.2. Use the `oml.sync` function to create an OML Dataframe `CUST_DF` as a proxy for the database table `CUSTOMER_INSURANCE_LTV`.",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:30:01+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<hr />\n<p>1.2. Use the <code>oml.sync</code> function to create an OML Dataframe <code>CUST_DF</code> as a proxy for the database table <code>CUSTOMER_INSURANCE_LTV</code>.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-2111489033",
      "id": "20220720-080131_238400780",
      "dateCreated": "2021-03-20T08:36:39+0000",
      "dateStarted": "2022-07-20T08:30:01+0000",
      "dateFinished": "2022-07-20T08:30:01+0000",
      "status": "FINISHED",
      "$$hashKey": "object:42"
    },
    {
      "text": "%python\n\nCUST_DF = oml.sync(\"OMLUSER\", table = \"CUSTOMER_INSURANCE_LTV\")\nprint(CUST_DF.shape)\nprint(CUST_DF.dtypes)",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:30:02+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "(13880, 31)\nMARITAL_STATUS            <class 'oml.core.string.String'>\nSTATE                     <class 'oml.core.string.String'>\nCREDIT_BALANCE              <class 'oml.core.float.Float'>\nCUSTOMER_TENURE             <class 'oml.core.float.Float'>\nMORTGAGE_AMOUNT             <class 'oml.core.float.Float'>\nBANK_FUNDS                  <class 'oml.core.float.Float'>\nNUM_DEPENDENTS              <class 'oml.core.float.Float'>\nHAS_CHILDREN                <class 'oml.core.float.Float'>\nINCOME                      <class 'oml.core.float.Float'>\nCUSTOMER_ID               <class 'oml.core.string.String'>\nGENDER                    <class 'oml.core.string.String'>\nPROFESSION                <class 'oml.core.string.String'>\nCREDIT_CARD_LIMITS          <class 'oml.core.float.Float'>\nREGION                    <class 'oml.core.string.String'>\nHOME_OWNERSHIP              <class 'oml.core.float.Float'>\nNUM_ONLINE_TRANS            <class 'oml.core.float.Float'>\nBUY_INSURANCE             <class 'oml.core.string.String'>\nMONTHLY_CHECKS              <class 'oml.core.float.Float'>\nNUM_TRANS_KIOSK             <class 'oml.core.float.Float'>\nAGE                         <class 'oml.core.float.Float'>\nMONEY_MONTLY_OVERDRAWN      <class 'oml.core.float.Float'>\nLTV                         <class 'oml.core.float.Float'>\nTOTAL_AUTOM_PAYMENTS        <class 'oml.core.float.Float'>\nNUM_TRANS_TELLER            <class 'oml.core.float.Float'>\nCHECKING_BALANCE            <class 'oml.core.float.Float'>\nNUM_TRANS_ATM               <class 'oml.core.float.Float'>\nLTV_BIN                   <class 'oml.core.string.String'>\nFIRST_NAME                <class 'oml.core.string.String'>\nNUM_MORTGAGES               <class 'oml.core.float.Float'>\nCAR_OWNERSHIP               <class 'oml.core.float.Float'>\nLAST_NAME                 <class 'oml.core.string.String'>\ndtype: object\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_378354152",
      "id": "20220720-080131_346993572",
      "dateCreated": "2021-03-20T08:36:39+0000",
      "dateStarted": "2022-07-20T08:30:02+0000",
      "dateFinished": "2022-07-20T08:30:02+0000",
      "status": "FINISHED",
      "$$hashKey": "object:43"
    },
    {
      "text": "%md\n## Task 2: Automated Algorithm Selection\nIn this task, you prepare the `CUST_DF` proxy object by separating predictors from the target, as it is standard for Python model building. This produces two new proxy objects that will be used in AutoML functions.\n\n2.1. Run the following script to split the `CUST_DF` data set into `CUST_X` (only containing the predictor attributes) and `CUST_y` (only containing the target attribute `BUY_INSURANCE`).",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:30:02+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>Task 2: Automated Algorithm Selection</h2>\n<p>In this task, you prepare the <code>CUST_DF</code> proxy object by separating predictors from the target, as it is standard for Python model building. This produces two new proxy objects that will be used in AutoML functions.</p>\n<p>2.1. Run the following script to split the <code>CUST_DF</code> data set into <code>CUST_X</code> (only containing the predictor attributes) and <code>CUST_y</code> (only containing the target attribute <code>BUY_INSURANCE</code>).</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-422709205",
      "id": "20220720-080131_1825559892",
      "dateCreated": "2021-03-20T08:36:38+0000",
      "dateStarted": "2022-07-20T08:30:03+0000",
      "dateFinished": "2022-07-20T08:30:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:44"
    },
    {
      "text": "%python\n\nCUST_X ,CUST_y  = CUST_DF.drop('BUY_INSURANCE'), CUST_DF['BUY_INSURANCE']",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:30:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-659863560",
      "id": "20220720-080131_1456697220",
      "dateCreated": "2021-03-20T08:36:38+0000",
      "dateStarted": "2022-07-20T08:30:03+0000",
      "dateFinished": "2022-07-20T08:30:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:45"
    },
    {
      "text": "%md\n---\n2.2. Run the following script to select the top `classification` algorithms for predicting whether a customer will buy insurance (`BUY_INSURANCE`). It displays the top 4 ranked algorithms (requested by the `k=4`) and their `accuracy` (the metric we requested in `score_metric`).  \n\nThe script returns Random Forest (rf), Decision Tree (dt), Neural Networks (nn) and Generalized Linear Models (glm) as the Top 4 algorithms, and among these the Random Forest is ranked highest for this problem, and the string `selected_insur_alg` will be used in subsequent AutoML function calls.\n \n**Note**: AutoML also supports regression, and the AlgorithmSelection function has other options and metrics that can be found in the documentation links at the bottom of this notebook.",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:30:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<hr />\n<p>2.2. Run the following script to select the top <code>classification</code> algorithms for predicting whether a customer will buy insurance (<code>BUY_INSURANCE</code>). It displays the top 4 ranked algorithms (requested by the <code>k=4</code>) and their <code>accuracy</code> (the metric we requested in <code>score_metric</code>).</p>\n<p>The script returns Random Forest (rf), Decision Tree (dt), Neural Networks (nn) and Generalized Linear Models (glm) as the Top 4 algorithms, and among these the Random Forest is ranked highest for this problem, and the string <code>selected_insur_alg</code> will be used in subsequent AutoML function calls.</p>\n<p><strong>Note</strong>: AutoML also supports regression, and the AlgorithmSelection function has other options and metrics that can be found in the documentation links at the bottom of this notebook.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-67706761",
      "id": "20220720-080131_1970093447",
      "dateCreated": "2021-03-20T08:36:38+0000",
      "dateStarted": "2022-07-20T08:30:03+0000",
      "dateFinished": "2022-07-20T08:30:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:46"
    },
    {
      "text": "%python\n\nas_insur = automl.AlgorithmSelection(mining_function='classification', score_metric='accuracy', parallel=2)\n\ninsur_alg_ranking = as_insur.select(CUST_X, CUST_y, k=4, case_id='CUSTOMER_ID')\n\nprint(\"Top ranked algorithms:\\n\", insur_alg_ranking)\n\nselected_insur_alg = insur_alg_ranking[0][0]\n\nprint(\"\\nTop algorithm: \", selected_insur_alg)",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:30:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Top ranked algorithms:\n [('rf', 0.8422005066956207), ('dt', 0.8143322475570033), ('nn', 0.7929786463988419), ('glm', 0.7886355410785378)]\n\nTop algorithm:  rf\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-479965726",
      "id": "20220720-080131_348095261",
      "dateCreated": "2021-03-20T08:36:38+0000",
      "dateStarted": "2022-07-20T08:30:04+0000",
      "dateFinished": "2022-07-20T08:30:24+0000",
      "status": "FINISHED",
      "$$hashKey": "object:47"
    },
    {
      "text": "%md\n## Task 3: Automated Feature Selection\n\nIn this task, you determine the features that best support the selected algorithm. First define a FeatureSelection object with score metric `accuracy`. Then call the `reduce` function and specify the desired algorithm, in this case, as determined above and stored in the variable `selected_insur_alg`.\n\nThe result will be a a subset of the original columns, to which we will append our case ID (`CUSTOMER_ID`) and use it in the next task.\n\n3.1. Run the following script to define the Feature Selection object `fs_insur` and call the `reduce` function with the selected algorithms and CUST_DF proxy objects:",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:30:24+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>Task 3: Automated Feature Selection</h2>\n<p>In this task, you determine the features that best support the selected algorithm. First define a FeatureSelection object with score metric <code>accuracy</code>. Then call the <code>reduce</code> function and specify the desired algorithm, in this case, as determined above and stored in the variable <code>selected_insur_alg</code>.</p>\n<p>The result will be a a subset of the original columns, to which we will append our case ID (<code>CUSTOMER_ID</code>) and use it in the next task.</p>\n<p>3.1. Run the following script to define the Feature Selection object <code>fs_insur</code> and call the <code>reduce</code> function with the selected algorithms and CUST_DF proxy objects:</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-1361000453",
      "id": "20220720-080131_113807787",
      "dateCreated": "2021-03-20T08:36:38+0000",
      "dateStarted": "2022-07-20T08:30:25+0000",
      "dateFinished": "2022-07-20T08:30:25+0000",
      "status": "FINISHED",
      "$$hashKey": "object:48"
    },
    {
      "text": "%python\n\nfs_insur = automl.FeatureSelection(mining_function = 'classification', score_metric = 'accuracy', parallel=2)\n\nselected_insur_features = fs_insur.reduce(selected_insur_alg, CUST_X, CUST_y, case_id='CUSTOMER_ID')\n\n# Add the CUSTOMER_ID back to the list\nselected_insur_features.append('CUSTOMER_ID')\n\nCUST_X_reduced = CUST_X[:,selected_insur_features]\n\nprint(\"Selected columns (plus ID):\", CUST_X_reduced.columns)\n\nprint(\"Number of columns: \")\n\"{} reduced to {}\".format(len(CUST_X.columns), len(CUST_X_reduced.columns))",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:30:25+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Selected columns (plus ID): ['MARITAL_STATUS', 'CREDIT_BALANCE', 'CUSTOMER_TENURE', 'MORTGAGE_AMOUNT', 'BANK_FUNDS', 'NUM_DEPENDENTS', 'HAS_CHILDREN', 'INCOME', 'GENDER', 'CREDIT_CARD_LIMITS', 'HOME_OWNERSHIP', 'NUM_ONLINE_TRANS', 'MONTHLY_CHECKS', 'NUM_TRANS_KIOSK', 'AGE', 'MONEY_MONTLY_OVERDRAWN', 'TOTAL_AUTOM_PAYMENTS', 'NUM_TRANS_TELLER', 'CHECKING_BALANCE', 'NUM_TRANS_ATM', 'NUM_MORTGAGES', 'CAR_OWNERSHIP', 'CUSTOMER_ID']\nNumber of columns: \n'30 reduced to 23'\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_1942661120",
      "id": "20220720-080131_1261072825",
      "dateCreated": "2021-03-20T08:36:38+0000",
      "dateStarted": "2022-07-20T08:30:25+0000",
      "dateFinished": "2022-07-20T08:31:08+0000",
      "status": "FINISHED",
      "$$hashKey": "object:49"
    },
    {
      "text": "%md\n### **Try it Yourself**\nTry other algorithms, such as `Decision Tree` or `Neural Network` in the first argument of the reduce function by replacing the string **selected_insur_alg** for **'dt'** or **'nn'** (with quotes), and see if different columns are selected.",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:31:08+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h3><strong>Try it Yourself</strong></h3>\n<p>Try other algorithms, such as <code>Decision Tree</code> or <code>Neural Network</code> in the first argument of the reduce function by replacing the string <strong>selected_insur_alg</strong> for <strong>'dt'</strong> or <strong>'nn'</strong> (with quotes), and see if different columns are selected.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_1176408954",
      "id": "20220720-080131_1463286878",
      "dateCreated": "2021-03-20T08:36:38+0000",
      "dateStarted": "2022-07-20T08:31:09+0000",
      "dateFinished": "2022-07-20T08:31:09+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50"
    },
    {
      "text": "%md\n## Task 4: Automated Model Tuning\nAt this point, you are ready to build and tune the models you want to use.\n\nFirst, you define a `ModelTuning` object for classification.\nThen, invoke `tune`, which builds and tunes the best model using the algorithm selected above (stored as `selected_insur_alg`) and the reduced data features (stored as `CUST_X_reduced`).\n\nModel tuning returns a dictionary with the best model and the evaluation results of the other models tried. This also contains a list of the hyperparameter choices tried and their corresponding score.\n\n4.1. Run the following script to define the model tuning object `mt_insur` for classification and invoke the `tune` function on it.\n\n**NOTE:** It may take around a minute or two to run depending on the configuration",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:31:09+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>Task 4: Automated Model Tuning</h2>\n<p>At this point, you are ready to build and tune the models you want to use.</p>\n<p>First, you define a <code>ModelTuning</code> object for classification.\n<br  />Then, invoke <code>tune</code>, which builds and tunes the best model using the algorithm selected above (stored as <code>selected_insur_alg</code>) and the reduced data features (stored as <code>CUST_X_reduced</code>).</p>\n<p>Model tuning returns a dictionary with the best model and the evaluation results of the other models tried. This also contains a list of the hyperparameter choices tried and their corresponding score.</p>\n<p>4.1. Run the following script to define the model tuning object <code>mt_insur</code> for classification and invoke the <code>tune</code> function on it.</p>\n<p><strong>NOTE:</strong> It may take around a minute or two to run depending on the configuration</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-1143826737",
      "id": "20220720-080131_1064839886",
      "dateCreated": "2021-09-22T15:19:44+0000",
      "dateStarted": "2022-07-20T08:31:09+0000",
      "dateFinished": "2022-07-20T08:31:09+0000",
      "status": "FINISHED",
      "$$hashKey": "object:51"
    },
    {
      "text": "%python\n\nmt_insur = automl.ModelTuning(mining_function = 'classification', parallel=2)\n\ninsur_tuned = mt_insur.tune(selected_insur_alg, CUST_X_reduced, CUST_y, case_id='CUSTOMER_ID')\n\ntop_insur_tuned = insur_tuned['best_model']\ntop_insur_tuned",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:31:09+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\nAlgorithm Name: Random Forest\n\nMining Function: CLASSIFICATION\n\nTarget: BUY_INSURANCE\n\nSettings: \n                    setting name            setting value\n0                      ALGO_NAME       ALGO_RANDOM_FOREST\n1              CLAS_MAX_SUP_BINS                       32\n2          CLAS_WEIGHTS_BALANCED                      OFF\n3                   ODMS_DETAILS             ODMS_DISABLE\n4   ODMS_MISSING_VALUE_TREATMENT  ODMS_MISSING_VALUE_AUTO\n5               ODMS_RANDOM_SEED                        0\n6                  ODMS_SAMPLING    ODMS_SAMPLING_DISABLE\n7                      PREP_AUTO                       ON\n8                      RFOR_MTRY                       15\n9                 RFOR_NUM_TREES                       20\n10           RFOR_SAMPLING_RATIO                      0.5\n11          TREE_IMPURITY_METRIC    TREE_IMPURITY_ENTROPY\n12           TREE_TERM_MAX_DEPTH                       16\n13         TREE_TERM_MINPCT_NODE                     0.05\n14        TREE_TERM_MINPCT_SPLIT                      0.1\n15         TREE_TERM_MINREC_NODE                       10\n16        TREE_TERM_MINREC_SPLIT                       20\n\nAttributes: \nAGE\nBANK_FUNDS\nCAR_OWNERSHIP\nCHECKING_BALANCE\nCREDIT_BALANCE\nCREDIT_CARD_LIMITS\nCUSTOMER_TENURE\nGENDER\nHAS_CHILDREN\nHOME_OWNERSHIP\nINCOME\nMARITAL_STATUS\nMONEY_MONTLY_OVERDRAWN\nMONTHLY_CHECKS\nMORTGAGE_AMOUNT\nNUM_DEPENDENTS\nNUM_MORTGAGES\nNUM_ONLINE_TRANS\nNUM_TRANS_ATM\nNUM_TRANS_KIOSK\nNUM_TRANS_TELLER\nTOTAL_AUTOM_PAYMENTS\n\nPartition: NO\n\n\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_1704574173",
      "id": "20220720-080131_2105516355",
      "dateCreated": "2021-03-20T08:36:37+0000",
      "dateStarted": "2022-07-20T08:31:09+0000",
      "dateFinished": "2022-07-20T08:32:24+0000",
      "status": "FINISHED",
      "$$hashKey": "object:52"
    },
    {
      "text": "%md\n---\n4.2. Run the following script to **list the hyperparameters and their values** that were tried for the `top two models`, along with the corresponding model's score metric value (`accuracy`).",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:32:24+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<hr />\n<p>4.2. Run the following script to <strong>list the hyperparameters and their values</strong> that were tried for the <code>top two models</code>, along with the corresponding model's score metric value (<code>accuracy</code>).</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-1542089364",
      "id": "20220720-080131_1707127020",
      "dateCreated": "2021-03-20T08:36:37+0000",
      "dateStarted": "2022-07-20T08:32:24+0000",
      "dateFinished": "2022-07-20T08:32:24+0000",
      "status": "FINISHED",
      "$$hashKey": "object:53"
    },
    {
      "text": "%python\n\nhyper_tuned = insur_tuned['all_evals']\n\nprint(*hyper_tuned[:2], sep='\\n')",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:32:24+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "(0.8426247886495626, {'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'OFF', 'RFOR_MTRY': 15, 'RFOR_NUM_TREES': 20, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_ENTROPY', 'TREE_TERM_MAX_DEPTH': 16, 'TREE_TERM_MINPCT_NODE': 0.05, 'TREE_TERM_MINPCT_SPLIT': 0.1})\n(0.8426247886495626, {'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'ON', 'RFOR_MTRY': 15, 'RFOR_NUM_TREES': 20, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_ENTROPY', 'TREE_TERM_MAX_DEPTH': 16, 'TREE_TERM_MINPCT_NODE': 0.05, 'TREE_TERM_MINPCT_SPLIT': 0.1})\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-660315146",
      "id": "20220720-080131_226321670",
      "dateCreated": "2021-03-20T08:36:37+0000",
      "dateStarted": "2022-07-20T08:32:25+0000",
      "dateFinished": "2022-07-20T08:32:25+0000",
      "status": "FINISHED",
      "$$hashKey": "object:54"
    },
    {
      "text": "%md\n---\n4.3. Run the following script to **list the hyperparameters and their values** that were tried for the `top ten models`, along with the corresponding model's score metric value (`accuracy`) in a better formatted way.",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:32:25+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<hr />\n<p>4.3. Run the following script to <strong>list the hyperparameters and their values</strong> that were tried for the <code>top ten models</code>, along with the corresponding model's score metric value (<code>accuracy</code>) in a better formatted way.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_43437703",
      "id": "20220720-080131_1940721725",
      "dateCreated": "2021-09-22T15:54:18+0000",
      "dateStarted": "2022-07-20T08:32:25+0000",
      "dateFinished": "2022-07-20T08:32:25+0000",
      "status": "FINISHED",
      "$$hashKey": "object:55"
    },
    {
      "text": "%python\n\ntuning_report = pd.concat([pd.DataFrame([i+1 for i in range(10)], columns=['Ranking']), \n                           pd.DataFrame(hyper_tuned[:10], columns=['Accuracy','Model_Settings_Tried'])], \n                           axis=1)\n\nz.show(tuning_report.round(6))                         ",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:32:25+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "Ranking",
                        "visible": true,
                        "width": 150,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "Accuracy",
                        "visible": true,
                        "width": 150,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "Model_Settings_Tried",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "Ranking": "string",
                      "Accuracy": "string",
                      "Model_Settings_Tried": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Ranking\tAccuracy\tModel_Settings_Tried\n1\t0.842625\t{'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'OFF', 'RFOR_MTRY': 15, 'RFOR_NUM_TREES': 20, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_ENTROPY', 'TREE_TERM_MAX_DEPTH': 16, 'TREE_TERM_MINPCT_NODE': 0.05, 'TREE_TERM_MINPCT_SPLIT': 0.1}\n2\t0.842625\t{'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'ON', 'RFOR_MTRY': 15, 'RFOR_NUM_TREES': 20, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_ENTROPY', 'TREE_TERM_MAX_DEPTH': 16, 'TREE_TERM_MINPCT_NODE': 0.05, 'TREE_TERM_MINPCT_SPLIT': 0.1}\n3\t0.840859\t{'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'OFF', 'RFOR_MTRY': 15, 'RFOR_NUM_TREES': 106, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_ENTROPY', 'TREE_TERM_MAX_DEPTH': 16, 'TREE_TERM_MINPCT_NODE': 0.05, 'TREE_TERM_MINPCT_SPLIT': 0.1}\n4\t0.840383\t{'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'OFF', 'RFOR_MTRY': 11, 'RFOR_NUM_TREES': 20, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_GINI', 'TREE_TERM_MAX_DEPTH': 16, 'TREE_TERM_MINPCT_NODE': 0.05, 'TREE_TERM_MINPCT_SPLIT': 6.673333333333333}\n5\t0.840383\t{'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'OFF', 'RFOR_MTRY': 11, 'RFOR_NUM_TREES': 20, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_GINI', 'TREE_TERM_MAX_DEPTH': 16, 'TREE_TERM_MINPCT_NODE': 0.05, 'TREE_TERM_MINPCT_SPLIT': 6.673533233333333}\n6\t0.840383\t{'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'ON', 'RFOR_MTRY': 11, 'RFOR_NUM_TREES': 20, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_GINI', 'TREE_TERM_MAX_DEPTH': 16, 'TREE_TERM_MINPCT_NODE': 0.05, 'TREE_TERM_MINPCT_SPLIT': 6.673333333333333}\n7\t0.840383\t{'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'OFF', 'RFOR_MTRY': 11, 'RFOR_NUM_TREES': 20, 'RFOR_SAMPLING_RATIO': 0.5000099, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_GINI', 'TREE_TERM_MAX_DEPTH': 16, 'TREE_TERM_MINPCT_NODE': 0.05, 'TREE_TERM_MINPCT_SPLIT': 6.673333333333333}\n8\t0.840383\t{'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'OFF', 'RFOR_MTRY': 11, 'RFOR_NUM_TREES': 20, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_GINI', 'TREE_TERM_MAX_DEPTH': 15, 'TREE_TERM_MINPCT_NODE': 0.05, 'TREE_TERM_MINPCT_SPLIT': 6.673333333333333}\n9\t0.840383\t{'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'OFF', 'RFOR_MTRY': 11, 'RFOR_NUM_TREES': 20, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_GINI', 'TREE_TERM_MAX_DEPTH': 16, 'TREE_TERM_MINPCT_NODE': 0.0500999, 'TREE_TERM_MINPCT_SPLIT': 6.673333333333333}\n10\t0.840383\t{'CLAS_MAX_SUP_BINS': 32, 'CLAS_WEIGHTS_BALANCED': 'OFF', 'RFOR_MTRY': 11, 'RFOR_NUM_TREES': 20, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_GINI', 'TREE_TERM_MAX_DEPTH': 14, 'TREE_TERM_MINPCT_NODE': 0.05, 'TREE_TERM_MINPCT_SPLIT': 6.673333333333333}\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-835874097",
      "id": "20220720-080131_1935196850",
      "dateCreated": "2021-09-22T15:30:01+0000",
      "dateStarted": "2022-07-20T08:32:25+0000",
      "dateFinished": "2022-07-20T08:32:25+0000",
      "status": "FINISHED",
      "$$hashKey": "object:56"
    },
    {
      "text": "%md\n---\n4.3. Run the following script to specify a custom search space to explore for model building using the `param_space` argument to the `tune` function. With this specification, model tuning will narrow the set of important hyperparameter values.\n**Note**: For illustration purposes we are using a different scoring metric, `f1_macro`.",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:32:26+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<hr />\n<p>4.3. Run the following script to specify a custom search space to explore for model building using the <code>param_space</code> argument to the <code>tune</code> function. With this specification, model tuning will narrow the set of important hyperparameter values.\n<br  /><strong>Note</strong>: For illustration purposes we are using a different scoring metric, <code>f1_macro</code>.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_182451103",
      "id": "20220720-080131_327113701",
      "dateCreated": "2021-03-20T08:40:16+0000",
      "dateStarted": "2022-07-20T08:32:26+0000",
      "dateFinished": "2022-07-20T08:32:26+0000",
      "status": "FINISHED",
      "$$hashKey": "object:57"
    },
    {
      "text": "%python\n\nsearch_space={'RFOR_SAMPLING_RATIO': {'type': 'continuous', 'range': [0.05, 0.5]},\n              'RFOR_NUM_TREES': {'type': 'discrete', 'range': [50, 55]},\n              'TREE_IMPURITY_METRIC': {'type': 'categorical',\n                                       'range': ['TREE_IMPURITY_ENTROPY', 'TREE_IMPURITY_GINI']},}\n\nmt2_insur = automl.ModelTuning(mining_function='classification', score_metric='f1_macro', parallel=2)\n\ninsur_tuned2 = mt2_insur.tune('rf', CUST_X, CUST_y, case_id='CUSTOMER_ID', param_space=search_space)\n\nscore, params = insur_tuned2['all_evals'][0]\n\"{:.2}\".format(score)\n\nprint('The top model has an f1_macro of ',score.round(4),' and parameters ',params)\n\ntop_insur_tuned2 = insur_tuned2['best_model']\ntop_insur_tuned2",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:32:26+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "The top model has an f1_macro of  0.8016  and parameters  {'RFOR_NUM_TREES': 53, 'RFOR_SAMPLING_RATIO': 0.5, 'TREE_IMPURITY_METRIC': 'TREE_IMPURITY_GINI'}\n\nAlgorithm Name: Random Forest\n\nMining Function: CLASSIFICATION\n\nTarget: BUY_INSURANCE\n\nSettings: \n                    setting name            setting value\n0                      ALGO_NAME       ALGO_RANDOM_FOREST\n1              CLAS_MAX_SUP_BINS                       32\n2          CLAS_WEIGHTS_BALANCED                      OFF\n3                   ODMS_DETAILS             ODMS_DISABLE\n4   ODMS_MISSING_VALUE_TREATMENT  ODMS_MISSING_VALUE_AUTO\n5               ODMS_RANDOM_SEED                        0\n6                  ODMS_SAMPLING    ODMS_SAMPLING_DISABLE\n7                      PREP_AUTO                       ON\n8                 RFOR_NUM_TREES                       53\n9            RFOR_SAMPLING_RATIO                      0.5\n10          TREE_IMPURITY_METRIC       TREE_IMPURITY_GINI\n11           TREE_TERM_MAX_DEPTH                       16\n12         TREE_TERM_MINPCT_NODE                      .05\n13        TREE_TERM_MINPCT_SPLIT                       .1\n14         TREE_TERM_MINREC_NODE                       10\n15        TREE_TERM_MINREC_SPLIT                       20\n\nAttributes: \nAGE\nBANK_FUNDS\nCAR_OWNERSHIP\nCHECKING_BALANCE\nCREDIT_BALANCE\nCREDIT_CARD_LIMITS\nCUSTOMER_TENURE\nGENDER\nHAS_CHILDREN\nHOME_OWNERSHIP\nINCOME\nLTV\nLTV_BIN\nMARITAL_STATUS\nMONEY_MONTLY_OVERDRAWN\nMONTHLY_CHECKS\nMORTGAGE_AMOUNT\nNUM_DEPENDENTS\nNUM_MORTGAGES\nNUM_ONLINE_TRANS\nNUM_TRANS_ATM\nNUM_TRANS_KIOSK\nNUM_TRANS_TELLER\nPROFESSION\nSTATE\nTOTAL_AUTOM_PAYMENTS\n\nPartition: NO\n\n\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-1386129503",
      "id": "20220720-080131_1976326617",
      "dateCreated": "2021-03-20T08:40:16+0000",
      "dateStarted": "2022-07-20T08:32:26+0000",
      "dateFinished": "2022-07-20T08:33:01+0000",
      "status": "FINISHED",
      "$$hashKey": "object:58"
    },
    {
      "text": "%md\n## Task 5: Automated Model Selection\nAs a short cut, you may choose to go directly to model selection on the training data. Model Selection automatically selects the top ranked algorithm (using Algorithm Selection) from the set of supported algorithms, then builds, tunes, and returns the model.\n\n5.1. Run the following script to define a` ModelSelection` object and invoke `select` for automatically building the best model on the `CUSTOMER_INSURANCE_LTV` dataset. The final model is displayed.\n\n**Note**: In the script below the option `k=1` (the default is 3) tells ModelSelection to only return the top model, and the option `cv=2` (the default is 'auto') requests that it uses 2 folds for a Stratified kFold Cross-Validation.  Mode details in the documentation links at the bottom of this notebook.\n\n*NOTE:* It may take around three to four minutes to run depending on the configuration",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:33:01+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>Task 5: Automated Model Selection</h2>\n<p>As a short cut, you may choose to go directly to model selection on the training data. Model Selection automatically selects the top ranked algorithm (using Algorithm Selection) from the set of supported algorithms, then builds, tunes, and returns the model.</p>\n<p>5.1. Run the following script to define a<code>ModelSelection</code> object and invoke <code>select</code> for automatically building the best model on the <code>CUSTOMER_INSURANCE_LTV</code> dataset. The final model is displayed.</p>\n<p><strong>Note</strong>: In the script below the option <code>k=1</code> (the default is 3) tells ModelSelection to only return the top model, and the option <code>cv=2</code> (the default is 'auto') requests that it uses 2 folds for a Stratified kFold Cross-Validation.  Mode details in the documentation links at the bottom of this notebook.</p>\n<p><em>NOTE:</em> It may take around three to four minutes to run depending on the configuration</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_-268936890",
      "id": "20220720-080131_1853592485",
      "dateCreated": "2021-03-20T08:40:16+0000",
      "dateStarted": "2022-07-20T08:33:01+0000",
      "dateFinished": "2022-07-20T08:33:01+0000",
      "status": "FINISHED",
      "$$hashKey": "object:59"
    },
    {
      "text": "%python\n\nms_cust = automl.ModelSelection(mining_function = 'classification', parallel=2)\n\ntop_model = ms_cust.select(CUST_X, CUST_y, case_id='CUSTOMER_ID', k=1, cv=2)\n\nprint('The top model is of the type: ', top_model[1])\n\nprint('Model details:')\n\ntop_model[0]",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:33:01+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "The top model is of the type:  rf\nModel details:\n\nAlgorithm Name: Random Forest\n\nMining Function: CLASSIFICATION\n\nTarget: BUY_INSURANCE\n\nSettings: \n                    setting name            setting value\n0                      ALGO_NAME       ALGO_RANDOM_FOREST\n1              CLAS_MAX_SUP_BINS                       32\n2          CLAS_WEIGHTS_BALANCED                       ON\n3                   ODMS_DETAILS             ODMS_DISABLE\n4   ODMS_MISSING_VALUE_TREATMENT  ODMS_MISSING_VALUE_AUTO\n5               ODMS_RANDOM_SEED                        0\n6                  ODMS_SAMPLING    ODMS_SAMPLING_DISABLE\n7                      PREP_AUTO                       ON\n8                      RFOR_MTRY                       14\n9                 RFOR_NUM_TREES                      203\n10           RFOR_SAMPLING_RATIO                      0.5\n11          TREE_IMPURITY_METRIC       TREE_IMPURITY_GINI\n12           TREE_TERM_MAX_DEPTH                       16\n13         TREE_TERM_MINPCT_NODE                     0.05\n14        TREE_TERM_MINPCT_SPLIT                      0.1\n15         TREE_TERM_MINREC_NODE                       10\n16        TREE_TERM_MINREC_SPLIT                       20\n\nAttributes: \nAGE\nBANK_FUNDS\nCAR_OWNERSHIP\nCHECKING_BALANCE\nCREDIT_BALANCE\nCREDIT_CARD_LIMITS\nCUSTOMER_TENURE\nGENDER\nHAS_CHILDREN\nHOME_OWNERSHIP\nINCOME\nLTV\nLTV_BIN\nMARITAL_STATUS\nMONEY_MONTLY_OVERDRAWN\nMONTHLY_CHECKS\nMORTGAGE_AMOUNT\nNUM_DEPENDENTS\nNUM_MORTGAGES\nNUM_ONLINE_TRANS\nNUM_TRANS_ATM\nNUM_TRANS_KIOSK\nNUM_TRANS_TELLER\nPROFESSION\nSTATE\nTOTAL_AUTOM_PAYMENTS\n\nPartition: NO\n\n\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_52454064",
      "id": "20220720-080131_1535345034",
      "dateCreated": "2021-03-20T08:40:16+0000",
      "dateStarted": "2022-07-20T08:33:02+0000",
      "dateFinished": "2022-07-20T08:36:51+0000",
      "status": "FINISHED",
      "$$hashKey": "object:60"
    },
    {
      "text": "%md\n## Learn More\n\n* <a href=\"https://docs.oracle.com/en/database/oracle/machine-learning/oml4py/1/mlpug/automatic-machine-learning.html#GUID-4B240E7A-1A8B-43B6-99A5-7FF86330805A\" onclick=\"return ! window.open('https://docs.oracle.com/en/database/oracle/machine-learning/oml4py/1/mlpug/automatic-machine-learning.html#GUID-4B240E7A-1A8B-43B6-99A5-7FF86330805A');\">Automated Machine Learning</a>\n* <a href=\"https://docs.oracle.com/en/database/oracle/machine-learning/oml-notebooks/\" onclick=\"return ! window.open('https://docs.oracle.com/en/database/oracle/machine-learning/oml-notebooks/');\">Oracle Machine Learning Notebooks</a>\n \n**Last Updated** - July 2022\n \nCopyright (c) 2022 Oracle Corporation \n###### <a href=\"https://oss.oracle.com/licenses/upl/\" onclick=\"return ! window.open('https://oss.oracle.com/licenses/upl/');\">The Universal Permissive License (UPL), Version 1.0</a>\n---",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:36:51+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>Learn More</h2>\n<ul>\n<li><a href=\"https: //docs.oracle.com/en/database/oracle/machine-learning/oml4py/1/mlpug/automatic-machine-learning.html#GUID-4B240E7A-1A8B-43B6-99A5-7FF86330805A\" onclick=\"return ! window.open('https://docs.oracle.com/en/database/oracle/machine-learning/oml4py/1/mlpug/automatic-machine-learning.html#GUID-4B240E7A-1A8B-43B6-99A5-7FF86330805A');\">Automated Machine Learning</a></li>\n<li><a href=\"https: //docs.oracle.com/en/database/oracle/machine-learning/oml-notebooks/\" onclick=\"return ! window.open('https://docs.oracle.com/en/database/oracle/machine-learning/oml-notebooks/');\">Oracle Machine Learning Notebooks</a></li>\n</ul>\n<p><strong>Last Updated</strong> - July 2022</p>\n<p>Copyright (c) 2022 Oracle Corporation</p>\n<h6><a href=\"https: //oss.oracle.com/licenses/upl/\" onclick=\"return ! window.open('https://oss.oracle.com/licenses/upl/');\">The Universal Permissive License (UPL), Version 1.0</a></h6>\n<hr />\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_1366158662",
      "id": "20220720-080131_852117868",
      "dateCreated": "2021-03-20T08:36:37+0000",
      "dateStarted": "2022-07-20T08:36:52+0000",
      "dateFinished": "2022-07-20T08:36:52+0000",
      "status": "FINISHED",
      "$$hashKey": "object:61"
    },
    {
      "text": "%md",
      "user": "OMLUSER",
      "dateUpdated": "2022-07-20T08:36:52+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1658304091392_882167742",
      "id": "20220720-080131_627039357",
      "dateCreated": "2021-03-20T08:36:37+0000",
      "status": "FINISHED",
      "$$hashKey": "object:62"
    }
  ],
  "name": "Lab 6: Use AutoML",
  "id": "121858",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "ORA96849F3DDA:OMLUSER:79624": [],
    "ORA7A60DC9B32:OMLUSER:79624": [],
    "ORA7CC90ACC73:OMLUSER:79624": [],
    "MDW381939C745:shared_process": []
  },
  "config": {
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {
    "isRunning": false
  }
}